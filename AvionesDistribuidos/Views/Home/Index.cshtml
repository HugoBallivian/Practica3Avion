@using Newtonsoft.Json

@{
    // Título de la página que se muestra en la vista
    ViewData["Title"] = "Home Page";

    // Obtenemos de ViewBag la lista de países como CountryViewModel
    var countries = ViewBag.Countries as List<AvionesDistribuidos.Models.CountryViewModel>;

    // Obtenemos de ViewBag la lista de vuelos disponibles (cadenas de texto)
    var flights = ViewBag.Flights as List<string>;

    // Obtenemos de ViewBag la lista de destinos (modelo Destino)
    var destinos = ViewBag.Destinos as List<AvionesDistribuidos.Models.Destino>;
}

<div class="container card-body">
    <h1 class="card-title">Reservación de Vuelos</h1>
    <br />
    <div class="row mb-9">
        <div class="col-md-9">
            <div class="mb-3">
                @* Selector de país de origen (select2) *@
                <label class="card-text" for="countrySelect">Estoy comprando desde:</label>
                <br />
                <select id="countrySelect" class="form-select">
                    @foreach (var group in ViewBag.Countries)
                    {
                        <optgroup label="@group.Continent">
                            @foreach (var country in group.Countries)
                            {
                                var selected = country == ViewBag.SelectedCountry ? "selected=\"selected\"" : "";
                                @Html.Raw($"<option value=\"{country}\" {selected}>{country}</option>")
                            }
                        </optgroup>
                    }
                </select>
                @* Aquí mostraremos la fecha y hora actualizada cada segundo *@
                <span id="currentDateTime" style="margin-left:10px; font-weight:bold;"></span>
            </div>

            <div class="row mb-3">
                <div class="col-md-4">
                    @* Selector de país de salida basado en destinos *@
                    <label class="card-text" for="departureSelect">País de Salida</label>
                    <br />
                    <select id="departureSelect" class="form-select">
                        <option value="">-- Selecciona País de Salida --</option>
                        @foreach (var dest in destinos)
                        {
                            <option value="@dest.descripcion_corta">
                                @dest.descripcion_corta
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    @* Selector de destino basado en la misma lista de destinos *@
                    <label class="card-text" for="destinationSelect">Destino</label>
                    <br />
                    <select id="destinationSelect" class="form-select">
                        <option class="card-text" value="">-- Selecciona Destino --</option>
                        @foreach (var dest in destinos)
                        {
                            <option class="card-text" value="@dest.descripcion_corta">
                                @dest.descripcion_corta
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    @* Selector de fecha con límites mínimo y máximo *@
                    <label for="dateSelect">Fecha</label>
                    <br />
                    <input type="date"
                           id="dateSelect"
                           class="form-control"
                           min="2025-03-01"
                           max="2025-12-31" />
                </div>
            </div>
            <br />
            @* Botón para cargar los vuelos según criterios *@
            <button class="col-md-12 btn btn-primary"
                    type="button"
                    id="loadFlightsButton">
                Cargar Vuelos
            </button>
            <br /><br />

            <div class="mb-3">
                @* Selector de vuelo, inicialmente deshabilitado *@
                <label for="flightSelect">Selecciona Vuelo</label>
                <br />
                <select id="flightSelect"
                        class="form-select"
                        disabled="disabled">
                    <option class="card-text" value="">
                        -- Selecciona Vuelo --
                    </option>
                    @foreach (var flight in flights)
                    {
                        <option class="card-text" value="@flight">
                            @flight
                        </option>
                    }
                </select>
                <br /><br />

                <div class="mb-3">
                    @* Botón para generar el mapa de asientos, deshabilitado hasta seleccionar vuelo *@
                    <button class="col-md-12 btn btn-primary"
                            type="button"
                            id="generateSeatsButton"
                            disabled>
                        Generar Mapa de Asientos
                    </button>
                </div>
                <br />
            </div>
        </div>

        <div class="col-md-3 card border-primary bg-light">
            @* Leyenda de colores para el estado de los asientos *@
            <h5 class="card-header" style="font-size:16px; margin-bottom:3px;">
                Estado de Asientos
            </h5>
            <table class="card-body" style="width:auto; border-collapse:collapse;">
                <tr>
                    <td style="padding:0.5px;">
                        <div style="width:15px; height:15px; background-color:blue; display:inline-block;"></div>
                    </td>
                    <td class="card-title" style="font-size:14px; padding-left:5px;">
                        Disponible
                    </td>
                </tr>
                <tr>
                    <td style="padding:0.5px;">
                        <div style="width:15px; height:15px; background-color:green; display:inline-block;"></div>
                    </td>
                    <td class="card-title" style="font-size:14px; padding-left:5px;">
                        Vendido
                    </td>
                </tr>
                <tr>
                    <td style="padding:0.5px;">
                        <div style="width:15px; height:15px; background-color:yellow; display:inline-block;"></div>
                    </td>
                    <td class="card-title" style="font-size:14px; padding-left:5px;">
                        Reservado
                    </td>
                </tr>
                <tr>
                    <td style="padding:0.5px;">
                        <div style="width:15px; height:15px; background-color:red; display:inline-block;"></div>
                    </td>
                    <td class="card-title" style="font-size:14px; padding-left:5px;">
                        Devolución
                    </td>
                </tr>
            </table>
            <p style="font-size:14px; margin-top:8px;">
                Hacer click 2 veces en el asiento que vas a escoger
            </p>
        </div>
    </div>

    <hr />

    @* Contenedor donde se renderiza el partial con la información del vuelo *@
    <div class="row flight-info mt-4">
        <div id="flightInfoContainer">
            @{
                Html.RenderPartial("_FlightInfoPartial");
            }
        </div>
    </div>

    @* Contenedor del mapa de asientos generado dinámicamente *@
    <div id="seatMapContainer">
        <h2>Mapa de Asientos</h2>
        <div class="seat-container">
            @* Recorremos la configuración de asientos por secciones, filas y asientos *@
            @foreach (var section in ViewBag.SeatConfig as List<AvionesDistribuidos.Models.SeatConfiguration>)
            {
                <div class="seat-section @(section.SectionName.Replace(" ", "").ToLower())">
                    @foreach (var row in section.Rows)
                    {
                        <div class="seat-row">
                            <div class="row-label">@row.RowLabel</div>
                            @foreach (var seat in row.Seats)
                            {
                                @* Si el asiento está vacío, mostramos un div vacío *@
                                if (seat.State == null)
                                {
                                    <div class="seat empty"></div>
                                }
                                else
                                {
                                    @* Asiento con estado y evento de doble click para abrir modal *@
                                    <div class="seat @seat.State"
                                         data-seat="@seat.SeatId"
                                         ondblclick="openSeatModal(this)">
                                        @seat.SeatId
                                    </div>
                                }
                            }
                        </div>
                    }
                </div>
            }
        </div>
    </div>

    @* Modal para cambiar el estado del asiento *@
    <div id="seatModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeSeatModal()">&times;</span>
            <h3>
                Modificar Estado del Asiento
                <span id="modalSeatId"></span>
            </h3>
            <div id="modalBody"></div>
        </div>
    </div>

    @* Modal para mostrar el boarding pass de demostración *@
    <div id="ticketModal" class="modal">
        <div class="modal-content" id="ticketModalContent" style="text-align:left;">
            <span class="close" onclick="closeTicketModal()">&times;</span>
            <div style="border:2px dashed #aaa; padding:15px; border-radius:6px; font-family:sans-serif;">
                <!-- Cabecera del boarding pass -->
                <div style="text-align:center; margin-bottom:10px;">
                    <h2 style="margin:0; font-size:1.4rem; font-weight:bold;">
                        BOARDING PASS
                    </h2>
                    <p style="margin:0; font-size:0.9rem;">
                        (Demostración de Ticket)
                    </p>
                </div>
                <hr style="margin:10px 0; border:none; border-top:1px solid #ccc;" />
                @* Datos del pasajero y vuelo *@
                <div style="display:flex; justify-content:space-between; margin-bottom:5px;">
                    <div>
                        <span style="font-weight:bold;">Pasajero:</span>
                        <span id="tkPassengerName"></span>
                    </div>
                    <div>
                        <span style="font-weight:bold;">Vuelo:</span>
                        <span id="tkFlightCode"></span>
                    </div>
                </div>
                @* Origen y destino *@
                <div style="display:flex; justify-content:space-between; margin-bottom:5px;">
                    <div>
                        <span style="font-weight:bold;">Origen:</span>
                        <span id="tkFrom"></span>
                    </div>
                    <div>
                        <span style="font-weight:bold;">Destino:</span>
                        <span id="tkTo"></span>
                    </div>
                </div>
                @* Fecha y hora *@
                <div style="display:flex; justify-content:space-between; margin-bottom:5px;">
                    <div>
                        <span style="font-weight:bold;">Fecha:</span>
                        <span id="tkDate"></span>
                    </div>
                    <div>
                        <span style="font-weight:bold;">Hora:</span>
                        <span id="tkTime"></span>
                    </div>
                </div>
                @* Asiento *@
                <div style="display:flex; justify-content:space-between; margin-bottom:5px;">
                    <div>
                        <span style="font-weight:bold;">Asiento:</span>
                        <span id="tkSeat"></span>
                    </div>
                </div>
                <hr style="margin:10px 0; border:none; border-top:1px solid #ccc;" />
                <p style="font-size:0.85rem; margin:0; text-align:center;">
                    Gracias por viajar con nosotros. ¡Buen viaje!
                </p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Inicializamos Select2 en los selects para mejor usabilidad
            $('#countrySelect').select2({
                placeholder: "-- Selecciona --",
                allowClear: true,
                width: 'resolve'
            });
            $('#departureSelect').select2({
                placeholder: "-- Selecciona País de Salida --",
                allowClear: true,
                width: 'resolve'
            });
            $('#destinationSelect').select2({
                placeholder: "-- Selecciona Destino --",
                allowClear: true,
                width: 'resolve'
            });
            $('#flightSelect').select2({
                placeholder: "-- Selecciona Vuelo --",
                allowClear: true,
                width: 'resolve'
            });

            // Deshabilitamos el select de vuelos al inicio
            $('#flightSelect').prop("disabled", true);

            // Evento click para cargar vuelos
            $('#loadFlightsButton').click(function () {
                var departure = $('#departureSelect').val();
                var destination = $('#destinationSelect').val();
                var date = $('#dateSelect').val();

                // Validación: al menos un criterio
                if (departure === "" && destination === "" && date === "") {
                    alert("Ingrese al menos un criterio de búsqueda (País de Salida y Destino, o Fecha).");
                    return;
                }

                // Llamada AJAX al servidor para obtener vuelos
                $.ajax({
                    url: '@Url.Action("GetFlights", "Home")',
                    type: 'POST',
                    data: { departure: departure, destination: destination, date: date },
                    success: function (response) {
                        if (response.success) {
                            var flightSelect = $('#flightSelect');
                            flightSelect.empty();
                            flightSelect.removeAttr("disabled");
                            flightSelect.append('<option value="">-- Selecciona Vuelo --</option>');
                            // Poblar el select con los vuelos recibidos
                            $.each(response.flights, function (i, flight) {
                                var flightText = flight.code + " " +
                                                 flight.departureDesc + " - " +
                                                 flight.destinationDesc + " " +
                                                 flight.time + " " +
                                                 flight.date;
                                flightSelect.append('<option value="' + flightText + '">' + flightText + '</option>');
                            });
                            flightSelect.trigger('change');
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert("Error al cargar vuelos.");
                    }
                });
            });

            // Habilitar botón de generar asientos al seleccionar vuelo
            $('#flightSelect').on('change', function () {
                var flightSelected = $(this).val();
                $('#generateSeatsButton').prop('disabled', !flightSelected);
            });

            // Evento click para generar mapa de asientos
            $('#generateSeatsButton').click(function (e) {
                e.preventDefault();

                var flightText = $('#flightSelect').val();
                if (!flightText) {
                    alert("Seleccione un vuelo primero.");
                    return;
                }

                // Extraemos el código de vuelo
                var flightCode = flightText.split(' ')[0];

                // Llamada AJAX para obtener configuración de asientos
                $.ajax({
                    url: '@Url.Action("GetSeatConfiguration", "Home")',
                    type: 'POST',
                    data: { flightCode: flightCode },
                    success: function (response) {
                        if (response.success) {
                            // Refrescamos el partial de info de vuelo
                            $.ajax({
                                url: '@Url.Action("FlightInfoPartial", "Home")',
                                type: 'GET',
                                success: function (html) {
                                    $('#flightInfoContainer').html(html);
                                },
                                error: function () {
                                    alert("Error al actualizar info de vuelo.");
                                }
                            });
                            // Refrescamos el partial del mapa de asientos
                            $.ajax({
                                url: '@Url.Action("SeatMapPartial", "Home")',
                                type: 'GET',
                                success: function (html) {
                                    $('#seatMapContainer').html(html);
                                },
                                error: function () {
                                    alert("Error al cargar el mapa de asientos.");
                                }
                            });
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert("Error al generar asientos.");
                    }
                });
            });
        });

        // Función para actualizar la fecha y hora cada segundo
        function updateDateTime() {
            var now = new Date();
            var options = {
                year: 'numeric', month: '2-digit', day: '2-digit',
                hour: '2-digit', minute: '2-digit', second: '2-digit'
            };
            document.getElementById("currentDateTime").textContent =
                now.toLocaleDateString('es-ES', options);
        }
        setInterval(updateDateTime, 1000);
        updateDateTime();

        // Parsea la cadena de texto del vuelo para extraer datos
        function parseFlightData(flightString) {
            var flightRegex = /^(?<code>\S+)\s+(?<departure>.+?)\s+-\s+(?<destination>.+?)\s+(?<time>\S+)\s+(?<date>\S+)$/;
            var match = flightString.match(flightRegex);
            if (match && match.groups) {
                return {
                    code: match.groups.code,
                    departure: match.groups.departure,
                    destination: match.groups.destination,
                    time: match.groups.time,
                    date: match.groups.date
                };
            }
            return null;
        }

        // Variables globales para el modal de asiento
        var pasajeros = @Html.Raw(ViewBag.Pasajeros);
        var currentSeat = null;
        var currentSeatState = null;

        // Abre el modal para cambiar estado de un asiento
        function openSeatModal(seatElement) {
            currentSeat = seatElement;
            currentSeatState = getSeatState(seatElement);

            // Si ya está vendido, mostramos directamente el ticket
            if (currentSeatState === "Vendido") {
                openTicketModal();
                return;
            }

            // Mostramos el ID de asiento en el modal
            var seatId = seatElement.getAttribute("data-seat");
            var seatPrice = seatElement.getAttribute("data-price");
            document.getElementById("modalSeatId").textContent = seatId;

            var modalBody = document.getElementById("modalBody");
            modalBody.innerHTML = "";

            // Detalle básico del asiento
            modalBody.innerHTML += '<p><strong>Asiento:</strong> ' + seatId + '</p>';
            modalBody.innerHTML += '<p><strong>Precio:</strong> ' + seatPrice + '</p>';
            modalBody.innerHTML += '<p><strong>Estado:</strong> ' + currentSeatState + '</p>';

            // Si está Disponible, permitimos buscar pasajero
            if (currentSeatState === "Disponible") {
                modalBody.innerHTML +=
                    '<div id="passportSection">' +
                        '<label>Pasaporte:</label>' +
                        '<div class="input-group">' +
                            '<input id="passportInput" class="form-control" type="text" />' +
                            '<button class="btn btn-secondary" type="button" onclick="buscarPasajero()">Buscar</button>' +
                        '</div>' +
                    '</div>';
                modalBody.innerHTML +=
                    '<div id="passengerSection">' +
                        '<label>Pasajero:</label>' +
                        '<input id="passengerInput" class="form-control" type="text" disabled />' +
                    '</div>';
            }
            // Si está en Reservado o devolución, mostramos datos existentes
            else if (currentSeatState === "Reservado" || currentSeatState === "Devolucion") {
                var passportVal = seatElement.getAttribute("data-passport") || "";
                var passengerVal = seatElement.getAttribute("data-passenger") || "";
                modalBody.innerHTML += '<p>Pasaporte: ' + passportVal + '</p>';
                modalBody.innerHTML += '<p>Pasajero: ' + passengerVal + '</p>';
            }

            // Botones según el estado actual
            modalBody.innerHTML += '<div id="stateButtons">';
            if (currentSeatState === "Disponible") {
                modalBody.innerHTML +=
                    '<button onclick="changeSeatState(\'Reservado\')" class="btn btn-warning">Reservar</button>';
                modalBody.innerHTML +=
                    '<button onclick="changeSeatState(\'Vendido\')" class="btn btn-success">Comprar</button>';
            } else if (currentSeatState === "Reservado") {
                modalBody.innerHTML +=
                    '<button onclick="changeSeatState(\'Vendido\')" class="btn btn-success">Comprar</button>';
                modalBody.innerHTML +=
                    '<button onclick="changeSeatState(\'Devolucion\')" class="btn btn-danger">Devolución</button>';
            } else if (currentSeatState === "Devolucion") {
                modalBody.innerHTML +=
                    '<button onclick="changeSeatState(\'Disponible\')" class="btn btn-info">Disponible</button>';
            }
            modalBody.innerHTML += '</div>';

            // Mostramos el modal
            document.getElementById("seatModal").style.display = "block";
        }

        // Busca pasajero por pasaporte vía AJAX
        function buscarPasajero() {
            var passport = document.getElementById("passportInput").value.trim();
            var passengerInput = document.getElementById("passengerInput");
            if (passport === "") {
                alert("Ingrese un número de pasaporte.");
                return;
            }
            $.ajax({
                url: '@Url.Action("BuscarPasajero", "Home")',
                type: 'POST',
                data: { passport: passport },
                success: function (response) {
                    if (response.success) {
                        passengerInput.value = response.passenger;
                        passengerInput.disabled = true;
                    } else {
                        passengerInput.value = "";
                        passengerInput.disabled = false;
                        alert("Pasaporte no encontrado. Ingrese el nombre del pasajero.");
                    }
                },
                error: function () {
                    alert("Error al buscar el pasajero.");
                }
            });
        }

        // Cambia el estado del asiento (Reservado, Vendido, Devolucion, Disponible)
                function changeSeatState(newState) {
            // Validación de transiciones permitidas
            if (currentSeatState === "Devolucion" && newState !== "Disponible") {
                alert("Sólo se puede cambiar a Disponible desde Devolución.");
                return;
            }

            // Si partimos de Disponible y vamos a Reservado/Vendido, validamos pasajero
            if (currentSeatState === "Disponible" && (newState === "Reservado" || newState === "Vendido")) {
                var passport = document.getElementById("passportInput").value.trim();
                var passenger = document.getElementById("passengerInput").value.trim();
                if (passport === "" || passenger === "") {
                    alert("Debe completar los campos de Pasaporte y Pasajero.");
                    return;
                }
                $.ajax({
                    url: '@Url.Action("ValidarPasajero", "Home")',
                    type: 'POST',
                    data: { passport: passport, passenger: passenger },
                    success: function (response) {
                         if (response.success) {
                             // Asignamos atributos data- al elemento del asiento
                             currentSeat.setAttribute("data-passport", passport);
                             currentSeat.setAttribute("data-passenger", response.passenger);
                             // Cambiamos clases CSS para reflejar el nuevo estado
                             currentSeat.className = 'seat ' + newState;

                             if (newState === "Vendido") {
                                 closeSeatModal();
                                 openTicketModal();
                             } else {
                                 closeSeatModal();
                             }
                         } else {
                             alert(response.message);
                         }
                    },
                    error: function () {
                        alert("Error al validar el pasajero.");
                    }
                });
            }
            // Para cambios simples (Reservado→devolución, devolución→Disponible, etc.)
             else {
                 currentSeat.className = 'seat ' + newState;
                 if (newState === "Vendido") {
                     closeSeatModal();
                     openTicketModal();
                 } else {
                     closeSeatModal();
                 }
             }
        }

        // Muestra el modal del ticket con datos del vuelo y asiento
        function openTicketModal() {
            var selectedFlight = document.getElementById("flightSelect").value;
            if (!selectedFlight) {
                alert("No se ha seleccionado un vuelo. Por favor, selecciona uno.");
                return;
            }
            var flightData = parseFlightData(selectedFlight);
            if (!flightData) {
                alert("El formato del vuelo no es válido.");
                return;
            }
            // Rellenamos los campos del boarding pass
            document.getElementById("tkPassengerName").innerText =
                currentSeat.getAttribute("data-passenger") || "Sin nombre";
            document.getElementById("tkFlightCode").innerText = flightData.code;
            document.getElementById("tkFrom").innerText = flightData.departure;
            document.getElementById("tkTo").innerText = flightData.destination;
            document.getElementById("tkDate").innerText = flightData.date;
            document.getElementById("tkTime").innerText = flightData.time;
            document.getElementById("tkSeat").innerText =
                currentSeat.getAttribute("data-seat");
            document.getElementById("ticketModal").style.display = "block";
        }

        // Cierra el modal de asiento
        function closeSeatModal() {
            document.getElementById("seatModal").style.display = "none";
            currentSeat = null;
            currentSeatState = null;
        }

        // Cierra el modal de ticket
        function closeTicketModal() {
            document.getElementById("ticketModal").style.display = "none";
            currentSeat = null;
            currentSeatState = null;
        }

        // Devuelve el estado actual del asiento según su clase CSS
        function getSeatState(seatElement) {
            if (seatElement.classList.contains("Disponible")) return "Disponible";
            if (seatElement.classList.contains("Reservado")) return "Reservado";
            if (seatElement.classList.contains("Vendido")) return "Vendido";
            if (seatElement.classList.contains("Devolucion")) return "Devolucion";
            return "Disponible";
        }

        // Cierra modales al hacer click fuera de ellos
        window.onclick = function (event) {
            var modal1 = document.getElementById("seatModal");
            var modal2 = document.getElementById("ticketModal");
            if (event.target == modal1) {
                closeSeatModal();
            }
            if (event.target == modal2) {
                closeTicketModal();
            }
        }
    </script>


    <script>
        $('#countrySelect').change(function () {
            var selectedCountry = $(this).val();
            if (selectedCountry) {
                window.location.href = '@Url.Action("Index", "Home")?country=' + selectedCountry;
            }
        });
    </script>


    <script>
        document.getElementById('countrySelect').addEventListener('change', function () {
            var selectedContinent = this.value;

            if (selectedContinent) {
                window.location.href = '/Home/Index?continent=' + selectedContinent;
            }
        });
    </script>

    <script>
        var currentFlightId = @ViewBag.FlightId;
        var servidorOrigen = "@ViewBag.SelectedCountry";
    </script>



}
